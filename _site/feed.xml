<?xml version="1.0" encoding="UTF-8"?> <rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"> <channel> <title>Darshan Soni</title> <description>Integrated Engineering student interested in transportation systems. Hobbyist front end web developer. Enthusiast of all things Design. </description> <link>https://darshandsoni.com//</link> <atom:link href="https://darshandsoni.com//feed.xml" rel="self" type="application/rss+xml"/> <pubDate>Thu, 28 Jul 2016 10:22:17 -0700</pubDate> <lastBuildDate>Thu, 28 Jul 2016 10:22:17 -0700</lastBuildDate> <generator>Jekyll v3.1.6</generator> <item> <title>Fixing Broken Plasma 5.7</title> <description> </description> <pubDate>Mon, 25 Jul 2016 00:00:00 -0700</pubDate> <link>https://darshandsoni.com//2016/07/25/Fixing-Broken-Plasma-5.7.html</link> <guid isPermaLink="true">https://darshandsoni.com//2016/07/25/Fixing-Broken-Plasma-5.7.html</guid> </item> <item> <title>Natural Naming for Software Repositories</title> <description>&lt;p&gt;This story can also be found on &lt;a href=&quot;https://medium.com/@darshandsoni/natural-naming-for-software-repositories-4842903d7a6c#.1zs0qvw85&quot;&gt;medium&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;A while back, I was invited to a fancy, upper-class lunch; all paid for. It’s a lunch I would not be able to afford with my wilted student wallet. A department head had some spare “discretionary funds” and decided to treat a bunch of vulture-like students to lunch, bless the good sir. It was indulgent and naturally, none of us knew what any of the food was because of all the hipster or haute nomenclature.&lt;/p&gt; &lt;p&gt;I couldn’t have been a better day as we learnt the names of edibles such as seabuckthorn, sunchoke, forcemeat and terrine. This was the start of a great new chapter! My colleagues and I had been discussing a plethora of ideas for GitHub repositories and there’s always something special about naming your repository. Having said that, I must admit that the random repo names GitHub suggests are often quite exquisite in their own way. Why just look at fictional-octo-couscous!&lt;/p&gt; &lt;p&gt;I settled on choosing the name &lt;strong&gt;seabuckthorn&lt;/strong&gt; for a new repository. Had a nice ring to it. Simple enough to remember. Seabuckthorn would be the front-end to a curated mailing list that automatically pushes out a list of interesting articles to a select group of individuals — it’s chief purpose was to relieve me from the pain that occurs every time I find an interesting article and have to track down a particular person on their preferred social media platform to share it with them.&lt;/p&gt; &lt;p&gt;Alright so Seabuckthorn it was! But that’s what everyone could see and use. I needed a backend to this platform so what do we have to think of next? A backend repo name. Darn. Out of curiosity, I had the wikipedia page for Seabuckthorn open and I decided, heck why not &lt;strong&gt;“hippophae”&lt;/strong&gt; — the official name for the family of sea-buckthorns. It seemed stunningly natural to name a backend repository after the Latin subfamily name for the very object that was my front-end. So we have seabuckthorn and it’s back-end hippophae. It then follows that any other variant of the platform could be a variation of the front-end name itself! An experimental version of the platform that allowed users to input content without my curation could be &lt;strong&gt;sandthorn&lt;/strong&gt;. Akin to a sandbox but also an alternative name for the seabuckthorn. A variant for people who felt spammed and wanted to dial back emails to once a month could be &lt;strong&gt;sallowthorn&lt;/strong&gt;. Again, another actual variant and a light-hearted prod at unhappy folk wishing me to email them less.&lt;/p&gt; &lt;p&gt;And as for the logo? A flat version of a seabuckthorn plant ought to do it! Who needs pricey graphic designers, project naming brainstorming meetings and pretentious logo roll-outs? Just use natural taxonomies!&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*eVTayiclpQLlDTWVk1ZTtQ.png&quot; alt=&quot;Seabuckthorn&#39;s logo&quot; /&gt; &amp;gt; The logo for Seabuckthorn.&lt;/p&gt; </description> <pubDate>Tue, 24 May 2016 00:00:00 -0700</pubDate> <link>https://darshandsoni.com//jekyll/2016/05/24/Natural-Naming-For-Software-Repositories.html</link> <guid isPermaLink="true">https://darshandsoni.com//jekyll/2016/05/24/Natural-Naming-For-Software-Repositories.html</guid> <category>Jekyll</category> </item> <item> <title>Weekly Updates 19 March 2016</title> <description>&lt;h1 id=&quot;weekly-updates&quot;&gt;Weekly updates&lt;/h1&gt; &lt;h2 id=&quot;march---19-march-2016&quot;&gt;12 March - 19 March 2016&lt;/h2&gt; &lt;p&gt;Hello world! Apologies for yet again not following the week. I need to make this a better routine. Alright here we go:&lt;/p&gt; &lt;h3 id=&quot;bad-door&quot;&gt;1. Bad door&lt;/h3&gt; &lt;p&gt;As we grieve about the new doors in the Nest, &lt;a href=&quot;http://www.vox.com/2016/2/26/11120236/bad-doors-human-centered-design&quot;&gt;here&lt;/a&gt; is a good video about door design. Don’t you just hate door that look like they should be pulled but actually push? While I disagree with the author’s “American design is right” stereotype, he has a point about good doors / design. Thanks to my colleague Ron Darvin for sharing this link.&lt;/p&gt; &lt;hr /&gt; &lt;h3 id=&quot;anon-vs-trump&quot;&gt;2. Anon vs Trump&lt;/h3&gt; &lt;p&gt;Oh &lt;a href=&quot;http://anonhq.com/anonymous-april-fools-surprise-donald-trump/&quot;&gt;this&lt;/a&gt; should be good! Anonymous have declared war on Trump. I hope it will be as entertaining as they make it seem!&lt;/p&gt; &lt;hr /&gt; &lt;h3 id=&quot;the-hydraulic-press-channel&quot;&gt;3. The Hydraulic Press channel&lt;/h3&gt; &lt;p&gt;This is a YouTube &lt;a href=&quot;https://www.youtube.com/channel/UCcMDMoNu66_1Hwi5-MeiQgw&quot;&gt;channel&lt;/a&gt; about a Finnish guy who owns a hydraulic press and uses it to crush phones, blenders, cameras… you name it. All bundled up with some deadpan commentary. What a beautiful channel. Cheers to my colleage Liam for sharing this.&lt;/p&gt; &lt;hr /&gt; &lt;h3 id=&quot;markdown---stop-word-processing&quot;&gt;4. Markdown - Stop word processing&lt;/h3&gt; &lt;p&gt;&lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt; is a brilliant tool for copiling documents quickly. The fact that you need not worry about formatting makes it so easy to learn and use. I already use it for compiling this message, taking notes and making documentation. My &lt;a href=&quot;http://darshandsoni.com&quot;&gt;website&lt;/a&gt; uses markdown inputs too, because why write in html? My website is still in development, but for fun, try out the 404 page ;) The IDE &lt;a href=&quot;https://atom.io/&quot;&gt;Atom&lt;/a&gt;, which has mixed reviews and is far from perfect, is a decent IDE that is designed to be heavily expandable thanks to plugins. The markdown to themeable pdf plugin allows you to choose custom CSS styles. This means you can produce documents such as letterheads by simply calling your letterhead CSS stylesheet. It’s a great tool to make document templates and zip out things like cover letters etc. Markdown does have it’s shortfalls though. It is a very simplified markup and isn’t the best for things like scientific papers or books.&lt;/p&gt; &lt;hr /&gt; &lt;h3 id=&quot;nylas-n1&quot;&gt;5. Nylas N1&lt;/h3&gt; &lt;p&gt;This new &lt;a href=&quot;https://www.nylas.com/n1&quot;&gt;email client&lt;/a&gt; (yes, yet another email client) was made by a neat company called Nylas. It was to do what Chrome did for the browser market - have plugins and add-ons. Written entirely in JavaScript, the developers want an open-source community to write whatever extensions they want for the email app. The sky is the limit. However, to allow something like this to happen, they had to ditch ancient pop and IMAP and SMTP, instead creating their own API. By default, this API is on their server which means all your emails pass through their servers :( That said, it is open source and people can see what their code is doing on GitHub. If you’re ultra-secure, they say you can instead set up the API locally and you need not use their servers. That does of course mean that your computer becomes a mail server. I tested this out on Fedora but it was so tedious: installing a vagrant box and setting it up in there that quite simply, I couldn’t be fucked. Too bad. I really hope they change things there!&lt;/p&gt; &lt;p&gt;&lt;em&gt;An unfortunately “mac-esque” screenshot of N1.&lt;/em&gt; &lt;img src=&quot;https://www.nylas.com/N1/images/4-pane-screenshot-no-shadow.png&quot; alt=&quot;Nylas N1&quot; /&gt; —&lt;/p&gt; &lt;h3 id=&quot;retro-debian-stickers&quot;&gt;6. Retro Debian stickers&lt;/h3&gt; &lt;p&gt;&lt;a href=&quot;http://www.unixstickers.com/stickers/linux_os_distribution_stickers/linux-debian-logo-mashup-edition-shaped-sticker&quot;&gt;These&lt;/a&gt; retro debian stickers look amazing.&lt;/p&gt; &lt;h2 id=&quot;debian-stickershttpwwwunixstickerscomimagecachedatastickersdebianxdebianp20mashupsh-340x340pngpagespeedicgvs5c2dxmepng&quot;&gt;&lt;img src=&quot;http://www.unixstickers.com/image/cache/data/stickers/debian/xDebian,P20mashup.sh-340x340.png.pagespeed.ic.GvS5c2dXMe.png&quot; alt=&quot;Debian stickers&quot; /&gt;&lt;/h2&gt; &lt;p&gt;That’s all for this week. Don’t want to make this too loaded! Also, there is now quite a diverse community of recipients. If certain things don’t interest you, just skip over them. If the entire mailing list doesn’t seem to interest you, feel free to unsubscribe. I’d hate to be spamming you.&lt;/p&gt; &lt;p&gt;Cheers, Darshan&lt;/p&gt; </description> <pubDate>Sat, 19 Mar 2016 00:00:00 -0700</pubDate> <link>https://darshandsoni.com//jekyll/2016/03/19/Weekly-Updates-19-March-2016.html</link> <guid isPermaLink="true">https://darshandsoni.com//jekyll/2016/03/19/Weekly-Updates-19-March-2016.html</guid> <category>Jekyll</category> </item> <item> <title>Optimising static sites</title> <description>&lt;p&gt;Static sites, are generally speaking, much faster than dynamic ones abound with javascript and server requests from the very start. This is because they are precompiled and served to users as they are on the web (excluding any special requests e.g. google map embeds). Hosting on a cloud based platform such as &lt;a href=&quot;http://github.com&quot; target=&quot;_blank&quot;&gt;GitHub&lt;/a&gt;, &lt;a href=&quot;https://aws.amazon.com/s3/&quot; target=&quot;_blank&quot;&gt;Amazon S3&lt;/a&gt; or &lt;a href=&quot;https://www.digitalocean.com/&quot; target=&quot;_blank&quot;&gt;Digital Ocean&lt;/a&gt; also drastically improves speed since the content is hardly ever down and retrieved from the best possible geographic location.&lt;/p&gt; &lt;p&gt;That said, static sites can get slightly bloated over time and a perfect place to test out loading time is Google’s &lt;a href=&quot;https://developers.google.com/speed/pagespeed/insights/&quot; target=&quot;_blank&quot;&gt;pagespeed insights&lt;/a&gt; which gives your site a test run, returns a scorecard and also gives suggestions on how to make your response time faster.&lt;/p&gt; &lt;p&gt;One thing you’ll notice it telling you is to use inline CSS or js instead of an external file reference to cull the additional request made for that file. Of course this only applies to small files, but practically speaking, not every js file can be inlined. Chances are you will be using some external reference for plugins or even bootstrap itself. A quick trick to reduce bloat here is to minify your site’s existing js, html and css files.&lt;/p&gt; &lt;p&gt;Worry not, for you do not have to do this manually. There is a jekyll plugin for this! And now you’re going to say, “But… GitHub pages won’t run those due to –safe mode etc…” and again, worry not! The plugin minifies your html, css, javascript and xmls as you build your site, so when it is pushed up to GitHub it is already compiled and does not call out any custom liquid tags like the flickr or 500px ones. To enact all this, simply run:&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem install jekyll-minifier &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;&lt;br /&gt; Then to your _config.yml file add the following:&lt;br /&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt; gems: - jekyll-minifier &lt;/code&gt; &lt;br /&gt; And that’s it! Try run the pagespeed insights again (note that it has a cache time of 30s) and see the improvements! For more information, check out the Git page for &lt;a href=&quot;https://github.com/digitalsparky/jekyll-minifier&quot; target=&quot;_blank&quot;&gt;jekyll-minifier&lt;/a&gt; thanks to digitalsparky.&lt;/p&gt; </description> <pubDate>Sun, 07 Feb 2016 00:00:00 -0800</pubDate> <link>https://darshandsoni.com//jekyll/2016/02/07/Optimising-static-sites.html</link> <guid isPermaLink="true">https://darshandsoni.com//jekyll/2016/02/07/Optimising-static-sites.html</guid> <category>Jekyll</category> </item> <item> <title>Adding images to Jekyll&#39;s post feed - without plugins</title> <description>&lt;p&gt;The &lt;a href=&quot;https://github.com/merlos/jekyll-auto-image&quot;&gt;jekyll-auto-image&lt;/a&gt; plugin is a pretty useful tool to get thumbnail images to display on a blog main page. However, this plugin is not yet supported by GitHub pages and will display broken image links if used with GitHub pages. In general, I prefer the minimalistic approach of using powerful liquid tags and plain old html to get the job done.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;This method assumes you are already implementing the &lt;a href=&quot;http://getbootstrap.com&quot;&gt;Bootstrap framework&lt;/a&gt;&lt;/p&gt; &lt;/blockquote&gt; &lt;h3 id=&quot;adding-a-thumbnail-to-a-post&quot;&gt;1. Adding a thumbnail to a post&lt;/h3&gt; &lt;p&gt;Choose a thumbnail image, add it to an images folder in your root (e.g. /images/ or /assets/). Alternatively find a permanent url for an image you want to use.&lt;/p&gt; &lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-markdown&quot; data-lang=&quot;markdown&quot;&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Title&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;goes&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;here&quot;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;categories&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;jekyll&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;thumbnail&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/images/customthumbnail.jpg&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt; &lt;h3 id=&quot;adding-a-default-thumbnail&quot;&gt;2. Adding a default thumbnail&lt;/h3&gt; &lt;p&gt;Sometimes, you may not have an appropriate thumbnail image for a particular post. In this case, we want jekyll to just use a default thumbnail saved in your images foler. Put a file in there named nothumbnail.jpg or similar.&lt;/p&gt; &lt;h3 id=&quot;adding-liquid-tags-to-render-thumbnails&quot;&gt;3. Adding Liquid tags to render thumbnails&lt;/h3&gt; &lt;p&gt;Here’s where the magic happens. We need the post directory to render the thumbnail image. In case there isn’t one, it should render the default thumbnail. On your blog’s directory page (e.g. blog.md), add the following liquid tag loops to do &lt;a href=&quot;https://truongtx.me/2013/01/05/thumbnail-post-list-for-jekyll-bootstrap/&quot;&gt;this&lt;/a&gt;.&lt;/p&gt; </description> <pubDate>Tue, 02 Feb 2016 00:00:00 -0800</pubDate> <link>https://darshandsoni.com//jekyll/2016/02/02/adding-images-to-jekyll-post-feed.html</link> <guid isPermaLink="true">https://darshandsoni.com//jekyll/2016/02/02/adding-images-to-jekyll-post-feed.html</guid> <category>Jekyll</category> </item> <item> <title>Reasons why TransLink is a complete failure</title> <description>&lt;div class=&quot;alert alert-danger alert-dismissible&quot; role=&quot;alert&quot;&gt; &lt;button type=&quot;button&quot; class=&quot;close&quot; data-dismiss=&quot;alert&quot; aria-label=&quot;Close&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&amp;times;&lt;/span&gt;&lt;/button&gt; &lt;strong&gt;Content coming soon:&lt;/strong&gt; This is a research post in progress. Check back soon for updates! &lt;/div&gt; &lt;!-- #### 1. The New Flyer fleet TransLink uses a fleet consisting of almost only [New Flyer and Nova buses](http://www.translink.ca/-/media/Documents/plans_and_projects/expansion_upgrades/Fleet%20Pictorial.pdf){:target=&quot;_blank&quot;}; buses with hugely inferior quality when compared to European manufacturers such as Volvo. This one is a more prickly issue than poorly trained drivers: Both companies have manufacturing in Canada and we bring in the whole issue of sourcing locally and using a proudly Canadian fleet. #### 2. Drivers &gt;I&#39;m normally quite hesitant to critique a large group of hardworking individuals such as bus drivers. However, my critique of them here is not so much at them individually rather, how TransLink operates with them. When I first came to BC in 2012, one thing that struck me was the politeness of the drivers on board buses. Of course, there is the occasional grumpy driver, but overall the drivers I came across were courteous, sympathetic and caring. Welcome greetings were commonplace, the lack of correct fare was not met with the same scorn as in Paris or London and drivers were willing to get up and assist passengers. I suspect this stems from the broader culture of kindness and general decency prevalent in much of rural BC and embedded itself in the days when BC Transit still operated in Vancouver. Here are the issues I have with drivers: Firstly, a large number of them go a step beyond common decency and happily engage in conversation with nearby passengers / supervisors. This is both *dangerous* and *irresponsible* on their part. What follows is that stops may sometimes be skipped, driving becomes erratic and customers waiting at &quot;quiet&quot; bus stops may be ignored. As a customer, I would much rather have a timely, reliable and safe experience than a polite driver. It&#39;s not a lack of appreciation of their jovial nature, it&#39;s a prioritising of safety above all else. The second issue with them is largely down to the way TransLink allocates their routes. Unlike many other cities, Vancouver bus drivers get shuffled on their routes much more often. I suppose that this might be so as not to bore them, but the result is bus drivers who are not completely comfortable with their assigned route. A common sight is the west-bound 041 approaching UBC - some drivers inadvertently miss the turnng onto Wesbrook Mall, to the ire of everyone getting off at TRIUMF Centre or everyone waiting in Wesbrook Village. The third and probably most important issue is their training with large vehicles. It hurts me to say that I consider Vancouver bus drivers to be amongst the worst when it comes to spatial awareness and ride comfort control. Anyone commuting may testify to a real bone-shaking ride if they&#39;re standing. Yes, the problem is also down to the bus manufacturers using inferior suspension systems, and TransLink&#39;s arbitrary &quot;2 block stop distance&quot; (something discussed separately here), but there are countless incidents where I have seen a driver accelerate rapidly away from a stop, ignoring the impending red light ahead and then slamming the breaks to stop at the intersection. I mean **why? Seriously! Why?** And let&#39;s not forget the nauseating tapping of the accelerator and brake pedals when waiting for the light to turn green... &quot;Just wait for the bloody light to turn green&quot;. It&#39;s one of those things that is barely felt in a small car but amplified disturbingly on a large vehicle such as a bus. #### 3. Switching to dynamic scheduling #### 9. Incompatible inter-service changes #### 4. The U-Pass (tap card) fiasco #### 5. Stupidly designed fare gates #### 6. Different branding within the same system #### 8. Poor demarcation #### 7. Evenly spaced stops (arbirarily) #### 10. Lack of redundancy #### 11. Low goals &gt; Now, showing off about being North America&#39;s Best transit system is like boasting about being the best student in the bottom 4 of a class of 30 students - it&#39;s meaningless and nobody cares. --&gt; </description> <pubDate>Mon, 01 Feb 2016 00:00:00 -0800</pubDate> <link>https://darshandsoni.com//transportation/2016/02/01/Reasons-TransLink-is-a-complete-failure.html</link> <guid isPermaLink="true">https://darshandsoni.com//transportation/2016/02/01/Reasons-TransLink-is-a-complete-failure.html</guid> <category>Transportation</category> </item> </channel> </rss>